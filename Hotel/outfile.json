{
  "collection": {
    "_": {
      "postman_id": "0f2f2bf0-03ca-482e-9006-11bfdc08c38f"
    },
    "item": [
      {
        "id": "bdd66b3b-6c72-4c0b-ae71-8533574738c6",
        "name": "Health check",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ping"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4feeaf95-afd5-4a26-8716-fa30c2df503d",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar estatus 201\", function(){",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test(\"Prueba código de estatus sea 201\", function(){",
                "    pm.expect(pm.response.code).to.equal(201);",
                "});",
                "",
                "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                "    pm.expect(pm.response.responseTime).to.be.below(300);",
                "});",
                "",
                "pm.test(\"Validar header content type\", function(){",
                "    pm.response.to.have.header(\"Content-Type\");",
                "});",
                "",
                "pm.test(\"Validar texto Created en body\", function(){",
                "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                "});",
                "",
                "console.log(\"Respuesta: \",pm.response)",
                "console.log(\"Código de respuesta: \", pm.response.code)",
                "console.log(\"Estado de respuesta: \", pm.response.status)",
                "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                "console.log(\"Headers: \", pm.response.headers)"
              ],
              "_lastExecutionId": "41a2a4ed-4846-4e2a-ad4c-f9630c9e9bf6"
            }
          }
        ]
      },
      {
        "id": "6c34300a-7fa4-4bf3-9e89-00841bcf1b57",
        "name": "Ver si hay reservas",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e7fb2f8a-4db7-4a47-98df-8b30f41eca77",
              "type": "text/javascript",
              "exec": [
                "var jsonData = pm.response.json()",
                "",
                "pm.test(\"Validar respuesta no vacia\", function(){",
                "    pm.response.to.have.body;",
                "});",
                "",
                "pm.test(\"Validar tiempo de respuesta sea menor a 200\", function(){",
                "    pm.expect(pm.response.responseTime).to.be.below(300);",
                "});",
                "",
                "pm.test(\"Validar header content type\", function(){",
                "    pm.response.to.have.header(\"content-Type\");",
                "});",
                "",
                "pm.test(\"Validar que sea Json\", function(){",
                "    pm.response.to.be.json;",
                "});",
                "",
                "pm.test(\"Validar texto bookingid en body\", function(){",
                "    pm.expect(pm.response.text()).to.include(\"bookingid\");",
                "})",
                "",
                "pm.test(\"Validar campo no sea undefined\", function(){",
                "    pm.expect(jsonData[0].bookingid).not.eq(\"undefined\")",
                "});",
                "",
                "console.log(\"res: \", pm.response)",
                "console.log(\"Id: \", jsonData[0].bookingid)",
                ""
              ],
              "_lastExecutionId": "251d7177-5fe5-4eb5-9b10-bd1b66c569ef"
            }
          }
        ]
      },
      {
        "id": "d5aebc6a-2f5b-4cdb-be3a-1b0c0a51af24",
        "name": "Crear reserva",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"firstname\": \"Will\",\n  \"lastname\": \"Smith\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2020-01-12\",\n    \"checkout\": \"2020-01-20\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c7fc688a-c143-4912-931b-02024d549e5b",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar estatus 200\", function(){",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                "    pm.expect(pm.response.responseTime).to.be.below(300);",
                "});",
                "",
                "pm.test(\"Validar header content type\", function(){",
                "    pm.response.to.have.header(\"Content-Type\");",
                "});",
                "",
                "pm.test(\"Validar que sea Json\", function(){",
                "    pm.response.to.be.json;",
                "});",
                "",
                "var jsonData = pm.response.json();",
                "console.log(\"Response: \", jsonData)",
                "console.log(\"Id: \", jsonData.bookingid)",
                "",
                "pm.environment.set('ID', jsonData.bookingid);",
                "postman.setEnvironmentVariable('ID2', jsonData.bookingid);",
                "",
                "pm.test(\"Validar que se crea un ID\", function(){",
                "    pm.expect(pm.environment.get.ID).not.eq(\"undefined\")",
                "});",
                "",
                "pm.test(\"Validar nombre de persona\", function(){",
                "    pm.expect(jsonData.booking.firstname).to.be.equal(\"Will\");",
                "});",
                "",
                "pm.test(\"Validar apellido\", function(){",
                "    pm.expect(jsonData.booking.lastname).to.be.equal(\"Smith\");",
                "});",
                "",
                "",
                ""
              ],
              "_lastExecutionId": "c6962b78-b7a2-498f-a971-cd5f78ab1b8b"
            }
          }
        ]
      },
      {
        "id": "d344b3a2-12a4-4572-8527-59e77a270d39",
        "name": "Ver reservación",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "{{ID}}"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8d4c2fba-9d40-4ba2-b56d-e52a0bef9dc1",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar estatus 200\", function(){",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Prueba código estatus igual\", function(){",
                "    pm.expect(pm.response.code).to.equal(200);",
                "});",
                "",
                "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                "    pm.expect(pm.response.responseTime).to.be.below(300);",
                "});",
                "",
                "pm.test(\"Validar header content type\", function(){",
                "    pm.response.to.have.header(\"Content-Type\");",
                "});",
                "",
                "pm.test(\"Validar que sea Json\", function(){",
                "    pm.response.to.be.json;",
                "});",
                "",
                "//Aqui obtiene la variable jsonData todo lo que hay en el json",
                "var jsonData = pm.response.json();",
                "console.log(\"Nombre: \", jsonData.firstname)",
                "",
                "pm.test(\"Validar nombre\",function(){",
                "        pm.expect(jsonData.firstname).to.be.equal(\"Will\")",
                "});",
                "",
                "pm.test(\"Validar apellido\",function(){",
                "        pm.expect(jsonData.lastname).to.be.equal(\"Smith\")",
                "});",
                " pm.test(\"Validar precio total\",function(){",
                "        pm.expect(jsonData.totalprice).to.be.equal(111)",
                "});",
                "",
                "pm.test(\"Validar fecha checkin\",function(){",
                "        pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-12\")",
                "});",
                "",
                "pm.test(\"Validar fecha checkout\",function(){",
                "        pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-20\")",
                "});"
              ],
              "_lastExecutionId": "8a37fa7a-357b-4660-bd91-962f98f373a1"
            }
          }
        ]
      },
      {
        "id": "67da4afe-d3b0-424c-8a0c-a77728571129",
        "name": "Modificar reserva",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "16"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Cookie",
              "value": "token={{token}}"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"firstname\": \"James\",\n  \"lastname\": \"Brown\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2018-01-01\",\n    \"checkout\": \"2019-01-01\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98505e87-c0fc-42a1-8a36-29429a080d2c",
              "type": "text/javascript",
              "exec": [
                "let getTokenRequest = {",
                "    method: 'POST',",
                "    url:'https://restful-booker.herokuapp.com/auth',",
                "    body:{",
                "        mode: 'urlencoded',",
                "        urlencoded:[",
                "            {key: 'username', value: 'admin'},",
                "            {key: 'password', value: 'password123'}",
                "        ]",
                "    }",
                "};",
                "console.log(\"Funcion: \",getTokenRequest)",
                "",
                "//Aquí se manda llamar la función de arriba",
                "pm.sendRequest(getTokenRequest,(err, response) =>",
                "{",
                "    console.log(\"Respuesta:\", response )",
                "    var jsonResponse = response.json(),",
                "    newToken = jsonResponse.token",
                "",
                "    pm.environment.set('token', newToken)",
                "    console.log(\"token: \", newToken)",
                "}",
                "); ",
                ""
              ],
              "_lastExecutionId": "fb4b3f7f-f1e1-4ad7-94fc-49e881cd3e62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47da805f-65c1-457f-8e65-ca553c2f1c08",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar estatus 200\", function(){",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Prueba status code\", function(){",
                "    pm.expect(pm.response.code).to.equal(200);",
                "});",
                "",
                "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                "    pm.expect(pm.response.responseTime).to.be.below(400);",
                "});",
                "",
                "pm.test(\"Validar header content type\", function(){",
                "    pm.response.to.have.header(\"Content-Type\");",
                "});",
                "",
                "pm.test(\"Validar que sea Json\", function(){",
                "    pm.response.to.be.json;",
                "});",
                "",
                "",
                "console.log(\"Respuesta: \",pm.response)",
                "console.log(\"Código de respuesta: \", pm.response.code)",
                "console.log(\"Estado de respuesta: \", pm.response.status)",
                "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                "console.log(\"Headers: \", pm.response.headers)"
              ],
              "_lastExecutionId": "7918d44c-92b7-445c-9b6c-331567b35e5d"
            }
          }
        ],
        "protocolProfileBehavior": {
          "disabledSystemHeaders": {
            "accept": true,
            "content-type": true
          }
        }
      },
      {
        "id": "2e567f5a-73ff-4b48-b25b-3a6570db0512",
        "name": "Generar token",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "auth"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{   \n    \"username\" : \"admin\",    \n    \"password\" : \"password123\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8661e0e9-58c3-425a-83a6-6c61d483b51c",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar estatus 200\", function(){",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Prueba código estatus 200\", function(){",
                "    pm.expect(pm.response.code).to.equal(200);",
                "});",
                "",
                "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                "    pm.expect(pm.response.responseTime).to.be.below(300);",
                "});",
                "",
                "pm.test(\"Validar header content type\", function(){",
                "    pm.response.to.have.header(\"Content-Type\");",
                "});",
                "",
                "pm.test(\"Validar que sea Json\", function(){",
                "    pm.response.to.be.json;",
                "});",
                "",
                "pm.test(\"Validar texto Token en body\", function(){",
                "    pm.expect(pm.response.text()).to.deep.include(\"token\")",
                "});",
                "",
                "console.log(\"Respuesta: \",pm.response)",
                "console.log(\"Código de respuesta: \", pm.response.code)",
                "console.log(\"Estado de respuesta: \", pm.response.status)",
                "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                "console.log(\"Headers: \", pm.response.headers)"
              ],
              "_lastExecutionId": "31d7d4fe-78bc-44c8-8b5e-936962f1b9d7"
            }
          }
        ]
      },
      {
        "id": "aed2bbe1-297b-45cb-a2f1-027e80018cb7",
        "name": "Partrial update",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "16"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=11cdf67d88840e9"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{ \n    \"firstname\" : \"James\",  \n     \"lastname\" : \"Brown\"\n     }"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "61a106e4-9067-4b17-9171-1ee64da1b7a1",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar estatus 403\", function(){",
                "    pm.response.to.have.status(403);",
                "});",
                "",
                "",
                "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                "    pm.expect(pm.response.responseTime).to.be.below(300);",
                "});",
                "",
                "pm.test(\"Validar header content type\", function(){",
                "    pm.response.to.have.header(\"Content-Type\");",
                "});",
                "",
                "pm.test(\"Validar que sea Json\", function(){",
                "    pm.response.to.be.json;",
                "});",
                "",
                "pm.test(\"Validar texto Forbidden en body\", function(){",
                "    pm.expect(pm.response.text()).to.deep.include(\"Forbidden\")",
                "});",
                "",
                "console.log(\"Respuesta: \",pm.response)",
                "console.log(\"Código de respuesta: \", pm.response.code)",
                "console.log(\"Estado de respuesta: \", pm.response.status)",
                "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                "console.log(\"Headers: \", pm.response.headers)"
              ],
              "_lastExecutionId": "b26cf428-52b0-4d2f-be2a-78b2deb8ab2c"
            }
          }
        ]
      },
      {
        "id": "3db10396-6528-4541-b4d6-addfbcc8e3ec",
        "name": "Borrar reserva",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "{{ID}}"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token={{token}}"
            }
          ],
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f2c9c1fe-7530-4145-ac62-ad0976fd152d",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar estatus 201\", function(){",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "",
                "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                "    pm.expect(pm.response.responseTime).to.be.below(300);",
                "});",
                "",
                "pm.test(\"Validar header content type\", function(){",
                "    pm.response.to.have.header(\"Content-Type\");",
                "});",
                "",
                "pm.test(\"Validar texto Created en body\", function(){",
                "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                "});",
                "",
                "",
                "console.log(\"Respuesta: \",pm.response)",
                "console.log(\"Código de respuesta: \", pm.response.code)",
                "console.log(\"Estado de respuesta: \", pm.response.status)",
                "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                "console.log(\"Headers: \", pm.response.headers)"
              ],
              "_lastExecutionId": "88956cf1-4207-483c-8447-31b3cb57e5bc"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "14327f91-1afa-49d0-810c-933be4008e31",
              "type": "text/javascript",
              "exec": [
                "let getTokenRequest = {",
                "    method: 'POST',",
                "    url:'https://restful-booker.herokuapp.com/auth',",
                "    body:{",
                "        mode: 'urlencoded',",
                "        urlencoded:[",
                "            {key: 'username', value: 'admin'},",
                "            {key: 'password', value: 'password123'}",
                "        ]",
                "    }",
                "};",
                "console.log(\"Funcion: \",getTokenRequest)",
                "",
                "",
                "pm.sendRequest(getTokenRequest,(err, response) =>",
                "{",
                "    console.log(\"Respuesta:\", response )",
                "    var jsonResponse = response.json(),",
                "    newToken = jsonResponse.token",
                "",
                "    pm.environment.set('token', newToken)",
                "    console.log(\"token: \", newToken)",
                "}",
                ");"
              ],
              "_lastExecutionId": "56079932-c0a0-4ae6-825f-42135a86bab7"
            }
          }
        ]
      },
      {
        "id": "96af7681-71c3-4cfc-a1af-4a4df6190750",
        "name": "Búsqueda de reservas",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              ""
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "fistname",
                "value": "Will"
              },
              {
                "key": "lastname",
                "value": "Smith"
              },
              {
                "key": "checkin",
                "value": "2020-01-12"
              },
              {
                "key": "checkout",
                "value": "2020-01-20"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "de8e4707-3812-465d-826e-ed2fb547e215",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar estatus 200\", function(){",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                "    pm.expect(pm.response.responseTime).to.be.below(300);",
                "});",
                "",
                "pm.test(\"Validar header content type\", function(){",
                "    pm.response.to.have.header(\"Content-Type\");",
                "});",
                "",
                "pm.test(\"Validar que sea Json\", function(){",
                "    pm.response.to.be.json;",
                "});",
                "",
                "console.log(\"Respuesta: \",pm.response)",
                "console.log(\"Código de respuesta: \", pm.response.code)",
                "console.log(\"Estado de respuesta: \", pm.response.status)",
                "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                "console.log(\"Headers: \", pm.response.headers)"
              ],
              "_lastExecutionId": "cbd384ef-2332-421e-8cbd-97fd973046f6"
            }
          }
        ]
      }
    ],
    "event": [],
    "protocolProfileBehavior": {},
    "variable": [],
    "info": {
      "_postman_id": "0f2f2bf0-03ca-482e-9006-11bfdc08c38f",
      "name": "Practica 3.2",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2020-08-24T17:45:27.181Z",
      "postman_exported_using": "Postman/7.29.1"
    },
    "id": "6e3606e4-3b19-481d-ac51-5333e39dfd73",
    "name": "Hotel QA",
    "values": [
      {
        "type": "any",
        "value": "restful-booker.herokuapp.com",
        "key": "url_base"
      },
      {
        "type": "any",
        "value": "f14c8c9f4efc674",
        "key": "token"
      },
      {
        "type": "any",
        "value": 31,
        "key": "ID"
      },
      {
        "type": "any",
        "value": "31",
        "key": "ID2"
      }
    ]
  },
  "globals": {
    "id": "2efd0189-e365-4d46-8f16-19cd784ccb34",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 52,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 130.0909090909091,
      "responseMin": 85,
      "responseMax": 511,
      "responseSd": 120.50534091932457,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1598294092966,
      "completed": 1598294094743
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 9,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cdb69ac6-0bd9-4333-b4ea-c5c9b120ce56",
          "httpRequestId": "42462b57-5b96-4c3a-8f31-ebd4356b8f2f"
        },
        "item": {
          "id": "bdd66b3b-6c72-4c0b-ae71-8533574738c6",
          "name": "Health check",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "ping"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4feeaf95-afd5-4a26-8716-fa30c2df503d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 201\", function(){",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Prueba código de estatus sea 201\", function(){",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "});",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar texto Created en body\", function(){",
                  "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                  "});",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "41a2a4ed-4846-4e2a-ad4c-f9630c9e9bf6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ping"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "301d0fa6-790f-4c07-b0f5-3aa1c1bf0c7f",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c0c20292-8a2a-4555-b808-0bbd0c898b02",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "7"
            },
            {
              "key": "Etag",
              "value": "W/\"7-rM9AyJuqT6iOan/xHh+AW+7K/T8\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:53 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              67,
              114,
              101,
              97,
              116,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 511,
          "responseSize": 7
        },
        "id": "bdd66b3b-6c72-4c0b-ae71-8533574738c6",
        "assertions": [
          {
            "assertion": "Validar estatus 201",
            "skipped": false
          },
          {
            "assertion": "Prueba código de estatus sea 201",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Tiempo de respuesta menor a 300 ms",
              "message": "expected 511 to be below 300",
              "stack": "AssertionError: expected 511 to be below 300\n   at Object.eval sandbox-script.js:3:1)"
            }
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar texto Created en body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fe6dc262-84ae-4c86-a98c-c7e9f33038d0",
          "length": 9,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a9e48934-b34a-4670-ad21-d6bf22d3c82f"
        },
        "item": {
          "id": "6c34300a-7fa4-4bf3-9e89-00841bcf1b57",
          "name": "Ver si hay reservas",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7fb2f8a-4db7-4a47-98df-8b30f41eca77",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json()",
                  "",
                  "pm.test(\"Validar respuesta no vacia\", function(){",
                  "    pm.response.to.have.body;",
                  "});",
                  "",
                  "pm.test(\"Validar tiempo de respuesta sea menor a 200\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar que sea Json\", function(){",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Validar texto bookingid en body\", function(){",
                  "    pm.expect(pm.response.text()).to.include(\"bookingid\");",
                  "})",
                  "",
                  "pm.test(\"Validar campo no sea undefined\", function(){",
                  "    pm.expect(jsonData[0].bookingid).not.eq(\"undefined\")",
                  "});",
                  "",
                  "console.log(\"res: \", pm.response)",
                  "console.log(\"Id: \", jsonData[0].bookingid)",
                  ""
                ],
                "_lastExecutionId": "251d7177-5fe5-4eb5-9b10-bd1b66c569ef"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7ae0f809-04ac-4466-bf3b-4b7d42a8f84c",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "6da8dabb-bdf2-440c-b70b-0c3be8914937",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "486"
            },
            {
              "key": "Etag",
              "value": "W/\"1e6-SP5lQ3jb+WHu/qPkgNuXa7VtuCc\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:53 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              54,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              50,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              51,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              56,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              57,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              54,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              55,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              54,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              49,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              55,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              48,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              51,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              53,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              53,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              48,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              52,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              55,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              49,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              57,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              57,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              53,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              51,
              48,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              52,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              52,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              56,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              50,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              56,
              125,
              44,
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              49,
              50,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 89,
          "responseSize": 486
        },
        "id": "6c34300a-7fa4-4bf3-9e89-00841bcf1b57",
        "assertions": [
          {
            "assertion": "Validar respuesta no vacia",
            "skipped": false
          },
          {
            "assertion": "Validar tiempo de respuesta sea menor a 200",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar que sea Json",
            "skipped": false
          },
          {
            "assertion": "Validar texto bookingid en body",
            "skipped": false
          },
          {
            "assertion": "Validar campo no sea undefined",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d205ffb7-909f-404c-ba14-faab48333735",
          "length": 9,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "222c667d-efe7-43c1-a7b7-f0b7f28850e7"
        },
        "item": {
          "id": "d5aebc6a-2f5b-4cdb-be3a-1b0c0a51af24",
          "name": "Crear reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstname\": \"Will\",\n  \"lastname\": \"Smith\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2020-01-12\",\n    \"checkout\": \"2020-01-20\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c7fc688a-c143-4912-931b-02024d549e5b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 200\", function(){",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar que sea Json\", function(){",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "console.log(\"Response: \", jsonData)",
                  "console.log(\"Id: \", jsonData.bookingid)",
                  "",
                  "pm.environment.set('ID', jsonData.bookingid);",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);",
                  "",
                  "pm.test(\"Validar que se crea un ID\", function(){",
                  "    pm.expect(pm.environment.get.ID).not.eq(\"undefined\")",
                  "});",
                  "",
                  "pm.test(\"Validar nombre de persona\", function(){",
                  "    pm.expect(jsonData.booking.firstname).to.be.equal(\"Will\");",
                  "});",
                  "",
                  "pm.test(\"Validar apellido\", function(){",
                  "    pm.expect(jsonData.booking.lastname).to.be.equal(\"Smith\");",
                  "});",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "c6962b78-b7a2-498f-a971-cd5f78ab1b8b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a3cdfb00-bb25-4609-b85e-3d35f628bf9c",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 209,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"firstname\": \"Will\",\n  \"lastname\": \"Smith\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2020-01-12\",\n    \"checkout\": \"2020-01-20\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "cc3bc9b4-4346-4a16-89b4-49e7f93cf674",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "196"
            },
            {
              "key": "Etag",
              "value": "W/\"c4-48chJ092Z8Q3p9o2UikbjxmXzzM\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:53 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              105,
              100,
              34,
              58,
              51,
              49,
              44,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              34,
              58,
              123,
              34,
              102,
              105,
              114,
              115,
              116,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              87,
              105,
              108,
              108,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              109,
              105,
              116,
              104,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              49,
              49,
              49,
              44,
              34,
              100,
              101,
              112,
              111,
              115,
              105,
              116,
              112,
              97,
              105,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              100,
              97,
              116,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              49,
              45,
              49,
              50,
              34,
              44,
              34,
              99,
              104,
              101,
              99,
              107,
              111,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              49,
              45,
              50,
              48,
              34,
              125,
              44,
              34,
              97,
              100,
              100,
              105,
              116,
              105,
              111,
              110,
              97,
              108,
              110,
              101,
              101,
              100,
              115,
              34,
              58,
              34,
              66,
              114,
              101,
              97,
              107,
              102,
              97,
              115,
              116,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 92,
          "responseSize": 196
        },
        "id": "d5aebc6a-2f5b-4cdb-be3a-1b0c0a51af24",
        "assertions": [
          {
            "assertion": "Validar estatus 200",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar que sea Json",
            "skipped": false
          },
          {
            "assertion": "Validar que se crea un ID",
            "skipped": false
          },
          {
            "assertion": "Validar nombre de persona",
            "skipped": false
          },
          {
            "assertion": "Validar apellido",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f960b0b0-0954-4f64-a765-8c727e266eac",
          "length": 9,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c759f2ac-6301-479d-892f-c193e03f844f"
        },
        "item": {
          "id": "d344b3a2-12a4-4572-8527-59e77a270d39",
          "name": "Ver reservación",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d4c2fba-9d40-4ba2-b56d-e52a0bef9dc1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 200\", function(){",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Prueba código estatus igual\", function(){",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar que sea Json\", function(){",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "//Aqui obtiene la variable jsonData todo lo que hay en el json",
                  "var jsonData = pm.response.json();",
                  "console.log(\"Nombre: \", jsonData.firstname)",
                  "",
                  "pm.test(\"Validar nombre\",function(){",
                  "        pm.expect(jsonData.firstname).to.be.equal(\"Will\")",
                  "});",
                  "",
                  "pm.test(\"Validar apellido\",function(){",
                  "        pm.expect(jsonData.lastname).to.be.equal(\"Smith\")",
                  "});",
                  " pm.test(\"Validar precio total\",function(){",
                  "        pm.expect(jsonData.totalprice).to.be.equal(111)",
                  "});",
                  "",
                  "pm.test(\"Validar fecha checkin\",function(){",
                  "        pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-12\")",
                  "});",
                  "",
                  "pm.test(\"Validar fecha checkout\",function(){",
                  "        pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-20\")",
                  "});"
                ],
                "_lastExecutionId": "8a37fa7a-357b-4660-bd91-962f98f373a1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "31"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7665e010-cfb1-4311-8a6f-861108b25f17",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "b3074b2f-8f11-4e83-a5e7-30d703da4013",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "169"
            },
            {
              "key": "Etag",
              "value": "W/\"a9-HW/W+2fVv1siudLtZ33S+28cGws\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:53 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              105,
              114,
              115,
              116,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              87,
              105,
              108,
              108,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              109,
              105,
              116,
              104,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              49,
              49,
              49,
              44,
              34,
              100,
              101,
              112,
              111,
              115,
              105,
              116,
              112,
              97,
              105,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              100,
              97,
              116,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              49,
              45,
              49,
              50,
              34,
              44,
              34,
              99,
              104,
              101,
              99,
              107,
              111,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              49,
              45,
              50,
              48,
              34,
              125,
              44,
              34,
              97,
              100,
              100,
              105,
              116,
              105,
              111,
              110,
              97,
              108,
              110,
              101,
              101,
              100,
              115,
              34,
              58,
              34,
              66,
              114,
              101,
              97,
              107,
              102,
              97,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 92,
          "responseSize": 169
        },
        "id": "d344b3a2-12a4-4572-8527-59e77a270d39",
        "assertions": [
          {
            "assertion": "Validar estatus 200",
            "skipped": false
          },
          {
            "assertion": "Prueba código estatus igual",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar que sea Json",
            "skipped": false
          },
          {
            "assertion": "Validar nombre",
            "skipped": false
          },
          {
            "assertion": "Validar apellido",
            "skipped": false
          },
          {
            "assertion": "Validar precio total",
            "skipped": false
          },
          {
            "assertion": "Validar fecha checkin",
            "skipped": false
          },
          {
            "assertion": "Validar fecha checkout",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cab5dad4-db3a-4da2-84fa-14bab3c39759",
          "length": 9,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "339b25f3-030b-4e30-9621-c535cb6da640"
        },
        "item": {
          "id": "67da4afe-d3b0-424c-8a0c-a77728571129",
          "name": "Modificar reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "16"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Cookie",
                "value": "token={{token}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstname\": \"James\",\n  \"lastname\": \"Brown\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2018-01-01\",\n    \"checkout\": \"2019-01-01\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "98505e87-c0fc-42a1-8a36-29429a080d2c",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {",
                  "    method: 'POST',",
                  "    url:'https://restful-booker.herokuapp.com/auth',",
                  "    body:{",
                  "        mode: 'urlencoded',",
                  "        urlencoded:[",
                  "            {key: 'username', value: 'admin'},",
                  "            {key: 'password', value: 'password123'}",
                  "        ]",
                  "    }",
                  "};",
                  "console.log(\"Funcion: \",getTokenRequest)",
                  "",
                  "//Aquí se manda llamar la función de arriba",
                  "pm.sendRequest(getTokenRequest,(err, response) =>",
                  "{",
                  "    console.log(\"Respuesta:\", response )",
                  "    var jsonResponse = response.json(),",
                  "    newToken = jsonResponse.token",
                  "",
                  "    pm.environment.set('token', newToken)",
                  "    console.log(\"token: \", newToken)",
                  "}",
                  "); ",
                  ""
                ],
                "_lastExecutionId": "fb4b3f7f-f1e1-4ad7-94fc-49e881cd3e62"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "47da805f-65c1-457f-8e65-ca553c2f1c08",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 200\", function(){",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Prueba status code\", function(){",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(400);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar que sea Json\", function(){",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "7918d44c-92b7-445c-9b6c-331567b35e5d"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disabledSystemHeaders": {
              "accept": true,
              "content-type": true
            }
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "16"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Cookie",
              "value": "token=5db1b2287355323"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "81e70652-db1f-47ab-8980-2ad69590f2cd",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 210,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"firstname\": \"James\",\n  \"lastname\": \"Brown\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2018-01-01\",\n    \"checkout\": \"2019-01-01\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}"
          }
        },
        "response": {
          "id": "debbaf8c-49b2-482b-81a7-65acdd78308c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "170"
            },
            {
              "key": "Etag",
              "value": "W/\"aa-waBDObUc25azXZ1Gkrz0LIEDGrg\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:54 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              105,
              114,
              115,
              116,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              97,
              109,
              101,
              115,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              114,
              111,
              119,
              110,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              49,
              49,
              49,
              44,
              34,
              100,
              101,
              112,
              111,
              115,
              105,
              116,
              112,
              97,
              105,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              100,
              97,
              116,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              34,
              58,
              34,
              50,
              48,
              49,
              56,
              45,
              48,
              49,
              45,
              48,
              49,
              34,
              44,
              34,
              99,
              104,
              101,
              99,
              107,
              111,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              49,
              57,
              45,
              48,
              49,
              45,
              48,
              49,
              34,
              125,
              44,
              34,
              97,
              100,
              100,
              105,
              116,
              105,
              111,
              110,
              97,
              108,
              110,
              101,
              101,
              100,
              115,
              34,
              58,
              34,
              66,
              114,
              101,
              97,
              107,
              102,
              97,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 96,
          "responseSize": 170
        },
        "id": "67da4afe-d3b0-424c-8a0c-a77728571129",
        "assertions": [
          {
            "assertion": "Validar estatus 200",
            "skipped": false
          },
          {
            "assertion": "Prueba status code",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar que sea Json",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cab5dad4-db3a-4da2-84fa-14bab3c39759",
          "length": 9,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "339b25f3-030b-4e30-9621-c535cb6da640"
        },
        "item": {
          "id": "67da4afe-d3b0-424c-8a0c-a77728571129",
          "name": "Modificar reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "16"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Cookie",
                "value": "token={{token}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstname\": \"James\",\n  \"lastname\": \"Brown\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2018-01-01\",\n    \"checkout\": \"2019-01-01\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "98505e87-c0fc-42a1-8a36-29429a080d2c",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {",
                  "    method: 'POST',",
                  "    url:'https://restful-booker.herokuapp.com/auth',",
                  "    body:{",
                  "        mode: 'urlencoded',",
                  "        urlencoded:[",
                  "            {key: 'username', value: 'admin'},",
                  "            {key: 'password', value: 'password123'}",
                  "        ]",
                  "    }",
                  "};",
                  "console.log(\"Funcion: \",getTokenRequest)",
                  "",
                  "//Aquí se manda llamar la función de arriba",
                  "pm.sendRequest(getTokenRequest,(err, response) =>",
                  "{",
                  "    console.log(\"Respuesta:\", response )",
                  "    var jsonResponse = response.json(),",
                  "    newToken = jsonResponse.token",
                  "",
                  "    pm.environment.set('token', newToken)",
                  "    console.log(\"token: \", newToken)",
                  "}",
                  "); ",
                  ""
                ],
                "_lastExecutionId": "fb4b3f7f-f1e1-4ad7-94fc-49e881cd3e62"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "47da805f-65c1-457f-8e65-ca553c2f1c08",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 200\", function(){",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Prueba status code\", function(){",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(400);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar que sea Json\", function(){",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "7918d44c-92b7-445c-9b6c-331567b35e5d"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disabledSystemHeaders": {
              "accept": true,
              "content-type": true
            }
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "16"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Cookie",
              "value": "token=5db1b2287355323"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "81e70652-db1f-47ab-8980-2ad69590f2cd",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 210,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"firstname\": \"James\",\n  \"lastname\": \"Brown\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2018-01-01\",\n    \"checkout\": \"2019-01-01\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}"
          }
        },
        "response": {
          "id": "debbaf8c-49b2-482b-81a7-65acdd78308c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "170"
            },
            {
              "key": "Etag",
              "value": "W/\"aa-waBDObUc25azXZ1Gkrz0LIEDGrg\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:54 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              105,
              114,
              115,
              116,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              97,
              109,
              101,
              115,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              114,
              111,
              119,
              110,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              49,
              49,
              49,
              44,
              34,
              100,
              101,
              112,
              111,
              115,
              105,
              116,
              112,
              97,
              105,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              111,
              111,
              107,
              105,
              110,
              103,
              100,
              97,
              116,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              34,
              58,
              34,
              50,
              48,
              49,
              56,
              45,
              48,
              49,
              45,
              48,
              49,
              34,
              44,
              34,
              99,
              104,
              101,
              99,
              107,
              111,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              49,
              57,
              45,
              48,
              49,
              45,
              48,
              49,
              34,
              125,
              44,
              34,
              97,
              100,
              100,
              105,
              116,
              105,
              111,
              110,
              97,
              108,
              110,
              101,
              101,
              100,
              115,
              34,
              58,
              34,
              66,
              114,
              101,
              97,
              107,
              102,
              97,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 96,
          "responseSize": 170
        },
        "id": "67da4afe-d3b0-424c-8a0c-a77728571129",
        "assertions": [
          {
            "assertion": "Validar estatus 200",
            "skipped": false
          },
          {
            "assertion": "Prueba status code",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar que sea Json",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "550bb51f-e16e-4789-9908-89dcc85fc2b5",
          "length": 9,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d40e2b99-a6c7-412d-b023-8c39c025a5e2"
        },
        "item": {
          "id": "2e567f5a-73ff-4b48-b25b-3a6570db0512",
          "name": "Generar token",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "auth"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{   \n    \"username\" : \"admin\",    \n    \"password\" : \"password123\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8661e0e9-58c3-425a-83a6-6c61d483b51c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 200\", function(){",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Prueba código estatus 200\", function(){",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar que sea Json\", function(){",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Validar texto Token en body\", function(){",
                  "    pm.expect(pm.response.text()).to.deep.include(\"token\")",
                  "});",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "31d7d4fe-78bc-44c8-8b5e-936962f1b9d7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "auth"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e511e0f2-8247-4bc0-95b3-1297c6daf044",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 66,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{   \n    \"username\" : \"admin\",    \n    \"password\" : \"password123\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "7512ad3d-79b2-4bef-a29f-2f67b8af9be9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "Etag",
              "value": "W/\"1b-lTSxX77XPGdb0OKi6TkglDggtZQ\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:54 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              49,
              102,
              56,
              97,
              48,
              49,
              57,
              57,
              99,
              55,
              52,
              56,
              97,
              52,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 85,
          "responseSize": 27
        },
        "id": "2e567f5a-73ff-4b48-b25b-3a6570db0512",
        "assertions": [
          {
            "assertion": "Validar estatus 200",
            "skipped": false
          },
          {
            "assertion": "Prueba código estatus 200",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar que sea Json",
            "skipped": false
          },
          {
            "assertion": "Validar texto Token en body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ec17f4ed-5ea3-4cd3-87de-c7f7b22849f2",
          "length": 9,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f7ef008b-5903-45b8-afd7-efa2b94a034d"
        },
        "item": {
          "id": "aed2bbe1-297b-45cb-a2f1-027e80018cb7",
          "name": "Partrial update",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "16"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token=11cdf67d88840e9"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{ \n    \"firstname\" : \"James\",  \n     \"lastname\" : \"Brown\"\n     }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "61a106e4-9067-4b17-9171-1ee64da1b7a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 403\", function(){",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar que sea Json\", function(){",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Validar texto Forbidden en body\", function(){",
                  "    pm.expect(pm.response.text()).to.deep.include(\"Forbidden\")",
                  "});",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "b26cf428-52b0-4d2f-be2a-78b2deb8ab2c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "16"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=11cdf67d88840e9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d9a7129f-53d9-44ce-8235-08908c1a4cba",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 64,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{ \n    \"firstname\" : \"James\",  \n     \"lastname\" : \"Brown\"\n     }"
          }
        },
        "response": {
          "id": "ea305d91-1b11-4696-9687-945dc4b91301",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "9"
            },
            {
              "key": "Etag",
              "value": "W/\"9-PatfYBLj4Um1qTm5zrukoLhNyPU\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:54 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              70,
              111,
              114,
              98,
              105,
              100,
              100,
              101,
              110
            ]
          },
          "cookie": [],
          "responseTime": 91,
          "responseSize": 9
        },
        "id": "aed2bbe1-297b-45cb-a2f1-027e80018cb7",
        "assertions": [
          {
            "assertion": "Validar estatus 403",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar que sea Json",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 3,
              "test": "Validar que sea Json",
              "message": "expected response body to be a valid json but got error Unexpected token 'F' at 1:1",
              "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token 'F' at 1:1\n   at Object.eval sandbox-script.js:4:7)"
            }
          },
          {
            "assertion": "Validar texto Forbidden en body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "48179312-bf81-4304-beaf-333bb561942a",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "156bd65e-3410-4ffe-a539-efd1675946af"
        },
        "item": {
          "id": "3db10396-6528-4541-b4d6-addfbcc8e3ec",
          "name": "Borrar reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f2c9c1fe-7530-4145-ac62-ad0976fd152d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 201\", function(){",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar texto Created en body\", function(){",
                  "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                  "});",
                  "",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "88956cf1-4207-483c-8447-31b3cb57e5bc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "14327f91-1afa-49d0-810c-933be4008e31",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {",
                  "    method: 'POST',",
                  "    url:'https://restful-booker.herokuapp.com/auth',",
                  "    body:{",
                  "        mode: 'urlencoded',",
                  "        urlencoded:[",
                  "            {key: 'username', value: 'admin'},",
                  "            {key: 'password', value: 'password123'}",
                  "        ]",
                  "    }",
                  "};",
                  "console.log(\"Funcion: \",getTokenRequest)",
                  "",
                  "",
                  "pm.sendRequest(getTokenRequest,(err, response) =>",
                  "{",
                  "    console.log(\"Respuesta:\", response )",
                  "    var jsonResponse = response.json(),",
                  "    newToken = jsonResponse.token",
                  "",
                  "    pm.environment.set('token', newToken)",
                  "    console.log(\"token: \", newToken)",
                  "}",
                  ");"
                ],
                "_lastExecutionId": "56079932-c0a0-4ae6-825f-42135a86bab7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "31"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=f14c8c9f4efc674"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ae1822b3-4c79-4d5c-aaad-6e0a6efb0f36",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "efb7328c-15c1-4c3a-8a39-94080a4b49e5",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "7"
            },
            {
              "key": "Etag",
              "value": "W/\"7-rM9AyJuqT6iOan/xHh+AW+7K/T8\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:54 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              67,
              114,
              101,
              97,
              116,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 92,
          "responseSize": 7
        },
        "id": "3db10396-6528-4541-b4d6-addfbcc8e3ec",
        "assertions": [
          {
            "assertion": "Validar estatus 201",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar texto Created en body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "48179312-bf81-4304-beaf-333bb561942a",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "156bd65e-3410-4ffe-a539-efd1675946af"
        },
        "item": {
          "id": "3db10396-6528-4541-b4d6-addfbcc8e3ec",
          "name": "Borrar reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f2c9c1fe-7530-4145-ac62-ad0976fd152d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 201\", function(){",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar texto Created en body\", function(){",
                  "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                  "});",
                  "",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "88956cf1-4207-483c-8447-31b3cb57e5bc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "14327f91-1afa-49d0-810c-933be4008e31",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {",
                  "    method: 'POST',",
                  "    url:'https://restful-booker.herokuapp.com/auth',",
                  "    body:{",
                  "        mode: 'urlencoded',",
                  "        urlencoded:[",
                  "            {key: 'username', value: 'admin'},",
                  "            {key: 'password', value: 'password123'}",
                  "        ]",
                  "    }",
                  "};",
                  "console.log(\"Funcion: \",getTokenRequest)",
                  "",
                  "",
                  "pm.sendRequest(getTokenRequest,(err, response) =>",
                  "{",
                  "    console.log(\"Respuesta:\", response )",
                  "    var jsonResponse = response.json(),",
                  "    newToken = jsonResponse.token",
                  "",
                  "    pm.environment.set('token', newToken)",
                  "    console.log(\"token: \", newToken)",
                  "}",
                  ");"
                ],
                "_lastExecutionId": "56079932-c0a0-4ae6-825f-42135a86bab7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "31"
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=f14c8c9f4efc674"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ae1822b3-4c79-4d5c-aaad-6e0a6efb0f36",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "efb7328c-15c1-4c3a-8a39-94080a4b49e5",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "7"
            },
            {
              "key": "Etag",
              "value": "W/\"7-rM9AyJuqT6iOan/xHh+AW+7K/T8\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:54 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              67,
              114,
              101,
              97,
              116,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 92,
          "responseSize": 7
        },
        "id": "3db10396-6528-4541-b4d6-addfbcc8e3ec",
        "assertions": [
          {
            "assertion": "Validar estatus 201",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar texto Created en body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ef0847f5-6507-48ee-836c-8a205a37c420",
          "length": 9,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9770cca6-9a30-4034-98a6-9f4144b4d33a"
        },
        "item": {
          "id": "96af7681-71c3-4cfc-a1af-4a4df6190750",
          "name": "Búsqueda de reservas",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "fistname",
                  "value": "Will"
                },
                {
                  "key": "lastname",
                  "value": "Smith"
                },
                {
                  "key": "checkin",
                  "value": "2020-01-12"
                },
                {
                  "key": "checkout",
                  "value": "2020-01-20"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "de8e4707-3812-465d-826e-ed2fb547e215",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 200\", function(){",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar que sea Json\", function(){",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "cbd384ef-2332-421e-8cbd-97fd973046f6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              ""
            ],
            "host": [
              "restful-booker",
              "herokuapp",
              "com"
            ],
            "query": [
              {
                "key": "fistname",
                "value": "Will"
              },
              {
                "key": "lastname",
                "value": "Smith"
              },
              {
                "key": "checkin",
                "value": "2020-01-12"
              },
              {
                "key": "checkout",
                "value": "2020-01-20"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6a5be120-83c0-40aa-93cb-0f57d9f64d87",
              "system": true
            },
            {
              "key": "Host",
              "value": "restful-booker.herokuapp.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "eea40c7f-21ab-4b67-b367-7933200ca347",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "Cowboy"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2"
            },
            {
              "key": "Etag",
              "value": "W/\"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w\""
            },
            {
              "key": "Date",
              "value": "Mon, 24 Aug 2020 18:34:54 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              93
            ]
          },
          "cookie": [],
          "responseTime": 89,
          "responseSize": 2
        },
        "id": "96af7681-71c3-4cfc-a1af-4a4df6190750",
        "assertions": [
          {
            "assertion": "Validar estatus 200",
            "skipped": false
          },
          {
            "assertion": "Tiempo de respuesta menor a 300 ms",
            "skipped": false
          },
          {
            "assertion": "Validar header content type",
            "skipped": false
          },
          {
            "assertion": "Validar que sea Json",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1127
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Tiempo de respuesta menor a 300 ms",
          "message": "expected 511 to be below 300",
          "stack": "AssertionError: expected 511 to be below 300\n   at Object.eval sandbox-script.js:3:1)",
          "checksum": "a6a6e2c491a39501fb59843ce8f6f3b3",
          "id": "c8fa229a-766d-4dc1-a9de-f05c71d22e06",
          "timestamp": 1598294093531,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "bdd66b3b-6c72-4c0b-ae71-8533574738c6",
          "name": "Health check",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "ping"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4feeaf95-afd5-4a26-8716-fa30c2df503d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 201\", function(){",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Prueba código de estatus sea 201\", function(){",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "});",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar texto Created en body\", function(){",
                  "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                  "});",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "41a2a4ed-4846-4e2a-ad4c-f9630c9e9bf6"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "0f2f2bf0-03ca-482e-9006-11bfdc08c38f"
          },
          "item": [
            {
              "id": "bdd66b3b-6c72-4c0b-ae71-8533574738c6",
              "name": "Health check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4feeaf95-afd5-4a26-8716-fa30c2df503d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 201\", function(){",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Prueba código de estatus sea 201\", function(){",
                      "    pm.expect(pm.response.code).to.equal(201);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar texto Created en body\", function(){",
                      "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                      "});",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "41a2a4ed-4846-4e2a-ad4c-f9630c9e9bf6"
                  }
                }
              ]
            },
            {
              "id": "6c34300a-7fa4-4bf3-9e89-00841bcf1b57",
              "name": "Ver si hay reservas",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7fb2f8a-4db7-4a47-98df-8b30f41eca77",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()",
                      "",
                      "pm.test(\"Validar respuesta no vacia\", function(){",
                      "    pm.response.to.have.body;",
                      "});",
                      "",
                      "pm.test(\"Validar tiempo de respuesta sea menor a 200\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Validar texto bookingid en body\", function(){",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\");",
                      "})",
                      "",
                      "pm.test(\"Validar campo no sea undefined\", function(){",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefined\")",
                      "});",
                      "",
                      "console.log(\"res: \", pm.response)",
                      "console.log(\"Id: \", jsonData[0].bookingid)",
                      ""
                    ],
                    "_lastExecutionId": "251d7177-5fe5-4eb5-9b10-bd1b66c569ef"
                  }
                }
              ]
            },
            {
              "id": "d5aebc6a-2f5b-4cdb-be3a-1b0c0a51af24",
              "name": "Crear reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firstname\": \"Will\",\n  \"lastname\": \"Smith\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2020-01-12\",\n    \"checkout\": \"2020-01-20\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c7fc688a-c143-4912-931b-02024d549e5b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "var jsonData = pm.response.json();",
                      "console.log(\"Response: \", jsonData)",
                      "console.log(\"Id: \", jsonData.bookingid)",
                      "",
                      "pm.environment.set('ID', jsonData.bookingid);",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);",
                      "",
                      "pm.test(\"Validar que se crea un ID\", function(){",
                      "    pm.expect(pm.environment.get.ID).not.eq(\"undefined\")",
                      "});",
                      "",
                      "pm.test(\"Validar nombre de persona\", function(){",
                      "    pm.expect(jsonData.booking.firstname).to.be.equal(\"Will\");",
                      "});",
                      "",
                      "pm.test(\"Validar apellido\", function(){",
                      "    pm.expect(jsonData.booking.lastname).to.be.equal(\"Smith\");",
                      "});",
                      "",
                      "",
                      ""
                    ],
                    "_lastExecutionId": "c6962b78-b7a2-498f-a971-cd5f78ab1b8b"
                  }
                }
              ]
            },
            {
              "id": "d344b3a2-12a4-4572-8527-59e77a270d39",
              "name": "Ver reservación",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d4c2fba-9d40-4ba2-b56d-e52a0bef9dc1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Prueba código estatus igual\", function(){",
                      "    pm.expect(pm.response.code).to.equal(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "//Aqui obtiene la variable jsonData todo lo que hay en el json",
                      "var jsonData = pm.response.json();",
                      "console.log(\"Nombre: \", jsonData.firstname)",
                      "",
                      "pm.test(\"Validar nombre\",function(){",
                      "        pm.expect(jsonData.firstname).to.be.equal(\"Will\")",
                      "});",
                      "",
                      "pm.test(\"Validar apellido\",function(){",
                      "        pm.expect(jsonData.lastname).to.be.equal(\"Smith\")",
                      "});",
                      " pm.test(\"Validar precio total\",function(){",
                      "        pm.expect(jsonData.totalprice).to.be.equal(111)",
                      "});",
                      "",
                      "pm.test(\"Validar fecha checkin\",function(){",
                      "        pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-12\")",
                      "});",
                      "",
                      "pm.test(\"Validar fecha checkout\",function(){",
                      "        pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-20\")",
                      "});"
                    ],
                    "_lastExecutionId": "8a37fa7a-357b-4660-bd91-962f98f373a1"
                  }
                }
              ]
            },
            {
              "id": "67da4afe-d3b0-424c-8a0c-a77728571129",
              "name": "Modificar reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "16"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firstname\": \"James\",\n  \"lastname\": \"Brown\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2018-01-01\",\n    \"checkout\": \"2019-01-01\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "98505e87-c0fc-42a1-8a36-29429a080d2c",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {",
                      "    method: 'POST',",
                      "    url:'https://restful-booker.herokuapp.com/auth',",
                      "    body:{",
                      "        mode: 'urlencoded',",
                      "        urlencoded:[",
                      "            {key: 'username', value: 'admin'},",
                      "            {key: 'password', value: 'password123'}",
                      "        ]",
                      "    }",
                      "};",
                      "console.log(\"Funcion: \",getTokenRequest)",
                      "",
                      "//Aquí se manda llamar la función de arriba",
                      "pm.sendRequest(getTokenRequest,(err, response) =>",
                      "{",
                      "    console.log(\"Respuesta:\", response )",
                      "    var jsonResponse = response.json(),",
                      "    newToken = jsonResponse.token",
                      "",
                      "    pm.environment.set('token', newToken)",
                      "    console.log(\"token: \", newToken)",
                      "}",
                      "); ",
                      ""
                    ],
                    "_lastExecutionId": "fb4b3f7f-f1e1-4ad7-94fc-49e881cd3e62"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "47da805f-65c1-457f-8e65-ca553c2f1c08",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Prueba status code\", function(){",
                      "    pm.expect(pm.response.code).to.equal(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(400);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "7918d44c-92b7-445c-9b6c-331567b35e5d"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disabledSystemHeaders": {
                  "accept": true,
                  "content-type": true
                }
              }
            },
            {
              "id": "2e567f5a-73ff-4b48-b25b-3a6570db0512",
              "name": "Generar token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{   \n    \"username\" : \"admin\",    \n    \"password\" : \"password123\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8661e0e9-58c3-425a-83a6-6c61d483b51c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Prueba código estatus 200\", function(){",
                      "    pm.expect(pm.response.code).to.equal(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Validar texto Token en body\", function(){",
                      "    pm.expect(pm.response.text()).to.deep.include(\"token\")",
                      "});",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "31d7d4fe-78bc-44c8-8b5e-936962f1b9d7"
                  }
                }
              ]
            },
            {
              "id": "aed2bbe1-297b-45cb-a2f1-027e80018cb7",
              "name": "Partrial update",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "16"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=11cdf67d88840e9"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{ \n    \"firstname\" : \"James\",  \n     \"lastname\" : \"Brown\"\n     }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61a106e4-9067-4b17-9171-1ee64da1b7a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 403\", function(){",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Validar texto Forbidden en body\", function(){",
                      "    pm.expect(pm.response.text()).to.deep.include(\"Forbidden\")",
                      "});",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "b26cf428-52b0-4d2f-be2a-78b2deb8ab2c"
                  }
                }
              ]
            },
            {
              "id": "3db10396-6528-4541-b4d6-addfbcc8e3ec",
              "name": "Borrar reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f2c9c1fe-7530-4145-ac62-ad0976fd152d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 201\", function(){",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar texto Created en body\", function(){",
                      "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                      "});",
                      "",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "88956cf1-4207-483c-8447-31b3cb57e5bc"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "14327f91-1afa-49d0-810c-933be4008e31",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {",
                      "    method: 'POST',",
                      "    url:'https://restful-booker.herokuapp.com/auth',",
                      "    body:{",
                      "        mode: 'urlencoded',",
                      "        urlencoded:[",
                      "            {key: 'username', value: 'admin'},",
                      "            {key: 'password', value: 'password123'}",
                      "        ]",
                      "    }",
                      "};",
                      "console.log(\"Funcion: \",getTokenRequest)",
                      "",
                      "",
                      "pm.sendRequest(getTokenRequest,(err, response) =>",
                      "{",
                      "    console.log(\"Respuesta:\", response )",
                      "    var jsonResponse = response.json(),",
                      "    newToken = jsonResponse.token",
                      "",
                      "    pm.environment.set('token', newToken)",
                      "    console.log(\"token: \", newToken)",
                      "}",
                      ");"
                    ],
                    "_lastExecutionId": "56079932-c0a0-4ae6-825f-42135a86bab7"
                  }
                }
              ]
            },
            {
              "id": "96af7681-71c3-4cfc-a1af-4a4df6190750",
              "name": "Búsqueda de reservas",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "fistname",
                      "value": "Will"
                    },
                    {
                      "key": "lastname",
                      "value": "Smith"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-12"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-20"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "de8e4707-3812-465d-826e-ed2fb547e215",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "cbd384ef-2332-421e-8cbd-97fd973046f6"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "0f2f2bf0-03ca-482e-9006-11bfdc08c38f",
            "name": "Practica 3.2",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 9,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cdb69ac6-0bd9-4333-b4ea-c5c9b120ce56",
          "httpRequestId": "42462b57-5b96-4c3a-8f31-ebd4356b8f2f",
          "scriptId": "4feeaf95-afd5-4a26-8716-fa30c2df503d",
          "execution": "41a2a4ed-4846-4e2a-ad4c-f9630c9e9bf6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 3,
          "test": "Validar que sea Json",
          "message": "expected response body to be a valid json but got error Unexpected token 'F' at 1:1",
          "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token 'F' at 1:1\n   at Object.eval sandbox-script.js:4:7)",
          "checksum": "c3c101b3d9fd628edcc92460bf9f1c5b",
          "id": "365ef9b4-247b-4303-b194-46a531d51b73",
          "timestamp": 1598294094383,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 4,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:3 in test-script",
        "source": {
          "id": "aed2bbe1-297b-45cb-a2f1-027e80018cb7",
          "name": "Partrial update",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "16"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token=11cdf67d88840e9"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{ \n    \"firstname\" : \"James\",  \n     \"lastname\" : \"Brown\"\n     }"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "61a106e4-9067-4b17-9171-1ee64da1b7a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar estatus 403\", function(){",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Validar header content type\", function(){",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Validar que sea Json\", function(){",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Validar texto Forbidden en body\", function(){",
                  "    pm.expect(pm.response.text()).to.deep.include(\"Forbidden\")",
                  "});",
                  "",
                  "console.log(\"Respuesta: \",pm.response)",
                  "console.log(\"Código de respuesta: \", pm.response.code)",
                  "console.log(\"Estado de respuesta: \", pm.response.status)",
                  "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                  "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                  "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                  "console.log(\"Headers: \", pm.response.headers)"
                ],
                "_lastExecutionId": "b26cf428-52b0-4d2f-be2a-78b2deb8ab2c"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "0f2f2bf0-03ca-482e-9006-11bfdc08c38f"
          },
          "item": [
            {
              "id": "bdd66b3b-6c72-4c0b-ae71-8533574738c6",
              "name": "Health check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4feeaf95-afd5-4a26-8716-fa30c2df503d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 201\", function(){",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Prueba código de estatus sea 201\", function(){",
                      "    pm.expect(pm.response.code).to.equal(201);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar texto Created en body\", function(){",
                      "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                      "});",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "41a2a4ed-4846-4e2a-ad4c-f9630c9e9bf6"
                  }
                }
              ]
            },
            {
              "id": "6c34300a-7fa4-4bf3-9e89-00841bcf1b57",
              "name": "Ver si hay reservas",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7fb2f8a-4db7-4a47-98df-8b30f41eca77",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()",
                      "",
                      "pm.test(\"Validar respuesta no vacia\", function(){",
                      "    pm.response.to.have.body;",
                      "});",
                      "",
                      "pm.test(\"Validar tiempo de respuesta sea menor a 200\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Validar texto bookingid en body\", function(){",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\");",
                      "})",
                      "",
                      "pm.test(\"Validar campo no sea undefined\", function(){",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefined\")",
                      "});",
                      "",
                      "console.log(\"res: \", pm.response)",
                      "console.log(\"Id: \", jsonData[0].bookingid)",
                      ""
                    ],
                    "_lastExecutionId": "251d7177-5fe5-4eb5-9b10-bd1b66c569ef"
                  }
                }
              ]
            },
            {
              "id": "d5aebc6a-2f5b-4cdb-be3a-1b0c0a51af24",
              "name": "Crear reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firstname\": \"Will\",\n  \"lastname\": \"Smith\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2020-01-12\",\n    \"checkout\": \"2020-01-20\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c7fc688a-c143-4912-931b-02024d549e5b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "var jsonData = pm.response.json();",
                      "console.log(\"Response: \", jsonData)",
                      "console.log(\"Id: \", jsonData.bookingid)",
                      "",
                      "pm.environment.set('ID', jsonData.bookingid);",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);",
                      "",
                      "pm.test(\"Validar que se crea un ID\", function(){",
                      "    pm.expect(pm.environment.get.ID).not.eq(\"undefined\")",
                      "});",
                      "",
                      "pm.test(\"Validar nombre de persona\", function(){",
                      "    pm.expect(jsonData.booking.firstname).to.be.equal(\"Will\");",
                      "});",
                      "",
                      "pm.test(\"Validar apellido\", function(){",
                      "    pm.expect(jsonData.booking.lastname).to.be.equal(\"Smith\");",
                      "});",
                      "",
                      "",
                      ""
                    ],
                    "_lastExecutionId": "c6962b78-b7a2-498f-a971-cd5f78ab1b8b"
                  }
                }
              ]
            },
            {
              "id": "d344b3a2-12a4-4572-8527-59e77a270d39",
              "name": "Ver reservación",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d4c2fba-9d40-4ba2-b56d-e52a0bef9dc1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Prueba código estatus igual\", function(){",
                      "    pm.expect(pm.response.code).to.equal(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "//Aqui obtiene la variable jsonData todo lo que hay en el json",
                      "var jsonData = pm.response.json();",
                      "console.log(\"Nombre: \", jsonData.firstname)",
                      "",
                      "pm.test(\"Validar nombre\",function(){",
                      "        pm.expect(jsonData.firstname).to.be.equal(\"Will\")",
                      "});",
                      "",
                      "pm.test(\"Validar apellido\",function(){",
                      "        pm.expect(jsonData.lastname).to.be.equal(\"Smith\")",
                      "});",
                      " pm.test(\"Validar precio total\",function(){",
                      "        pm.expect(jsonData.totalprice).to.be.equal(111)",
                      "});",
                      "",
                      "pm.test(\"Validar fecha checkin\",function(){",
                      "        pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-12\")",
                      "});",
                      "",
                      "pm.test(\"Validar fecha checkout\",function(){",
                      "        pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-20\")",
                      "});"
                    ],
                    "_lastExecutionId": "8a37fa7a-357b-4660-bd91-962f98f373a1"
                  }
                }
              ]
            },
            {
              "id": "67da4afe-d3b0-424c-8a0c-a77728571129",
              "name": "Modificar reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "16"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firstname\": \"James\",\n  \"lastname\": \"Brown\",\n  \"totalprice\": 111,\n  \"depositpaid\": true,\n  \"bookingdates\": {\n    \"checkin\": \"2018-01-01\",\n    \"checkout\": \"2019-01-01\"\n  },\n  \"additionalneeds\": \"Breakfast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "98505e87-c0fc-42a1-8a36-29429a080d2c",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {",
                      "    method: 'POST',",
                      "    url:'https://restful-booker.herokuapp.com/auth',",
                      "    body:{",
                      "        mode: 'urlencoded',",
                      "        urlencoded:[",
                      "            {key: 'username', value: 'admin'},",
                      "            {key: 'password', value: 'password123'}",
                      "        ]",
                      "    }",
                      "};",
                      "console.log(\"Funcion: \",getTokenRequest)",
                      "",
                      "//Aquí se manda llamar la función de arriba",
                      "pm.sendRequest(getTokenRequest,(err, response) =>",
                      "{",
                      "    console.log(\"Respuesta:\", response )",
                      "    var jsonResponse = response.json(),",
                      "    newToken = jsonResponse.token",
                      "",
                      "    pm.environment.set('token', newToken)",
                      "    console.log(\"token: \", newToken)",
                      "}",
                      "); ",
                      ""
                    ],
                    "_lastExecutionId": "fb4b3f7f-f1e1-4ad7-94fc-49e881cd3e62"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "47da805f-65c1-457f-8e65-ca553c2f1c08",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Prueba status code\", function(){",
                      "    pm.expect(pm.response.code).to.equal(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(400);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "7918d44c-92b7-445c-9b6c-331567b35e5d"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disabledSystemHeaders": {
                  "accept": true,
                  "content-type": true
                }
              }
            },
            {
              "id": "2e567f5a-73ff-4b48-b25b-3a6570db0512",
              "name": "Generar token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{   \n    \"username\" : \"admin\",    \n    \"password\" : \"password123\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8661e0e9-58c3-425a-83a6-6c61d483b51c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Prueba código estatus 200\", function(){",
                      "    pm.expect(pm.response.code).to.equal(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Validar texto Token en body\", function(){",
                      "    pm.expect(pm.response.text()).to.deep.include(\"token\")",
                      "});",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "31d7d4fe-78bc-44c8-8b5e-936962f1b9d7"
                  }
                }
              ]
            },
            {
              "id": "aed2bbe1-297b-45cb-a2f1-027e80018cb7",
              "name": "Partrial update",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "16"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=11cdf67d88840e9"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{ \n    \"firstname\" : \"James\",  \n     \"lastname\" : \"Brown\"\n     }"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61a106e4-9067-4b17-9171-1ee64da1b7a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 403\", function(){",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Validar texto Forbidden en body\", function(){",
                      "    pm.expect(pm.response.text()).to.deep.include(\"Forbidden\")",
                      "});",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "b26cf428-52b0-4d2f-be2a-78b2deb8ab2c"
                  }
                }
              ]
            },
            {
              "id": "3db10396-6528-4541-b4d6-addfbcc8e3ec",
              "name": "Borrar reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f2c9c1fe-7530-4145-ac62-ad0976fd152d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 201\", function(){",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar texto Created en body\", function(){",
                      "    pm.expect(pm.response.text()).to.deep.include(\"Created\")",
                      "});",
                      "",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "88956cf1-4207-483c-8447-31b3cb57e5bc"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "14327f91-1afa-49d0-810c-933be4008e31",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {",
                      "    method: 'POST',",
                      "    url:'https://restful-booker.herokuapp.com/auth',",
                      "    body:{",
                      "        mode: 'urlencoded',",
                      "        urlencoded:[",
                      "            {key: 'username', value: 'admin'},",
                      "            {key: 'password', value: 'password123'}",
                      "        ]",
                      "    }",
                      "};",
                      "console.log(\"Funcion: \",getTokenRequest)",
                      "",
                      "",
                      "pm.sendRequest(getTokenRequest,(err, response) =>",
                      "{",
                      "    console.log(\"Respuesta:\", response )",
                      "    var jsonResponse = response.json(),",
                      "    newToken = jsonResponse.token",
                      "",
                      "    pm.environment.set('token', newToken)",
                      "    console.log(\"token: \", newToken)",
                      "}",
                      ");"
                    ],
                    "_lastExecutionId": "56079932-c0a0-4ae6-825f-42135a86bab7"
                  }
                }
              ]
            },
            {
              "id": "96af7681-71c3-4cfc-a1af-4a4df6190750",
              "name": "Búsqueda de reservas",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "fistname",
                      "value": "Will"
                    },
                    {
                      "key": "lastname",
                      "value": "Smith"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-12"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-20"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "de8e4707-3812-465d-826e-ed2fb547e215",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar estatus 200\", function(){",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Tiempo de respuesta menor a 300 ms\", function(){",
                      "    pm.expect(pm.response.responseTime).to.be.below(300);",
                      "});",
                      "",
                      "pm.test(\"Validar header content type\", function(){",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Validar que sea Json\", function(){",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "console.log(\"Respuesta: \",pm.response)",
                      "console.log(\"Código de respuesta: \", pm.response.code)",
                      "console.log(\"Estado de respuesta: \", pm.response.status)",
                      "console.log(\"Tiempo de respuesta: \", pm.response.responseTime)",
                      "console.log(\"Cuerpo de respuesta: \", pm.response.text)",
                      "console.log(\"Tamaño de respuesta: \", pm.response.responseSize)",
                      "console.log(\"Headers: \", pm.response.headers)"
                    ],
                    "_lastExecutionId": "cbd384ef-2332-421e-8cbd-97fd973046f6"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "0f2f2bf0-03ca-482e-9006-11bfdc08c38f",
            "name": "Practica 3.2",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "ec17f4ed-5ea3-4cd3-87de-c7f7b22849f2",
          "length": 9,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f7ef008b-5903-45b8-afd7-efa2b94a034d",
          "scriptId": "61a106e4-9067-4b17-9171-1ee64da1b7a1",
          "execution": "b26cf428-52b0-4d2f-be2a-78b2deb8ab2c"
        }
      }
    ],
    "error": null
  }
}